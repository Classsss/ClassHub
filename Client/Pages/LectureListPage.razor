@page "/classroom/{roomid:int}/lecture"
@layout MainLayout
@inject NavigationManager NavigationManager
@using ClassHub.Client.Models
@using System.Text.Json

<h2 class="mb-4">동영상 강의 목록</h2>
<WeekPicker weekValue = "@selectedWeek" ValueChanged="OnWeekChanged" allowMultipleSelection=true />
<br />

<style>
    .Lecture-row:hover {
        background-color: #bdc3c7;
        cursor: pointer;
    }

</style>

@foreach (var item in lectures.GroupBy(x => new { x.Week, x.Lesson }))
{
    @if (selectedWeek.Contains(item.Key.Week))
    {
        <i class="oi oi-calendar" style="font-weight:bold; font-size:18px; margin-bottom:10px;">@(" " + item.Key.Week)주차 @(item.Key.Lesson)차시</i>
        <table class="table table-bordered">
            <tbody>
                @foreach (var subItem in item)
                {
                    <tr class="Lecture-row" @onclick="@(() => Showlecture(subItem))">
                        <td colspan="4" style="font-weight:bold;"><i class="oi oi-media-play"/>@(" " + subItem.Title)</td>
                    </tr>
                    <tr>
                        <td style="font-weight:bold; width:10%">
                            학습인정기간
                        </td>
                        <td style="width:70%">
                            @(subItem.StartDate.ToString("yyyy년 MM월 dd일 HH시 mm분") + " ~ " + subItem.EndDate.ToString("yyyy년 MM월 dd일 HH시 mm분"))
                        </td>
                        <td style ="font-weight:bold; width:10%">
                            수강상태
                        </td>
                        <td class="@(subItem.IsEnrolled ? "enrolled" : "not-enrolled")" style="font-weight:bold; width:10%;">
                            <i class="@((subItem.IsEnrolled) ? "oi oi-circle-check" : "oi oi-x")"></i>
                            @(subItem.IsEnrolled ? "수강" : "미수강")
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4">
                            <div class="progress">
                                <div class="progress-bar progress-bar-striped" role="progressbar" aria-valuemax="100" aria-valuemin="0" style="@($"width: {subItem.CurrentLearningTime / (float)subItem.TotalLearningTime * 100}%")"></div>
                            </div>
                            <div class="text-center" style="font-size:12px">
                                @(subItem.CurrentLearningTime + "분 / " + subItem.TotalLearningTime + "분")
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="4" style="font-size:14px;">@subItem.Description</td>
                    </tr>
                }
            </tbody>
        </table>
        <br />
    }
}

<style>
    .progress {
        height: 20px;
        margin-bottom: 5px;
    }

    .progress-bar {
        background-color: #007bff;
        transition: none;
    }

    .enrolled {
        background-color: #E7F0FD !important;
        color: #1659EA !important;
        
    }

    .not-enrolled {
        background-color: #FCFFE5 !important;
        color: #C2B20C !important;
    }
</style>


@code {
    [Parameter]
    public int RoomId { get; set; }

    public List<int> selectedWeek = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14};
    public int selectedid;
    private async Task OnWeekChanged(List<int> week)
    {
        selectedWeek = week;
        StateHasChanged();
        await Task.CompletedTask;
    }

    private List<Lecture> lectures = new List<Lecture>
        {
        // 샘플 데이터
        // 실제 프로젝트에서는 데이터베이스 또는 API를 통해 동영상 강의 정보를 가져옴
        new Lecture { Id = 1, Week = 1, Lesson = 1, Title = "론칭, 모니터링, 시스템 유지 보수", Description = "기계학습 1주차 첫번째 강의 입니다.", StartDate = new DateTime(2023, 03, 02, 08, 0, 0), EndDate = new DateTime(2023, 03, 04, 23, 50, 0), VideoUrl = "https://ch-17094775.kinxzone.com/name/ch_17094775/187b792a89749565", TotalLearningTime = 54, CurrentLearningTime = 54, IsEnrolled = true },
        new Lecture { Id = 2, Week = 1, Lesson = 2, Title = "Colab을 활용한 실습", Description = "기계학습 1주차 두번째 강의 입니다.",StartDate = new DateTime(2023, 03, 04, 08, 0, 0), EndDate = new DateTime(2023, 03, 06, 23, 50, 0), VideoUrl = "https://ch-17094775.kinxzone.com/name/ch_17094775/187b793719d29ec2", TotalLearningTime = 112, CurrentLearningTime = 84, IsEnrolled = false },
        new Lecture { Id = 3, Week = 1, Lesson = 3, Title = "교차 검증을 사용한 정확도(accuracy) 측정", Description = "기계학습 1주차 세번째 강의 입니다.", StartDate = new DateTime(2023, 03, 09, 0, 10, 0), EndDate = new DateTime(2023, 03, 11, 23, 50, 0), VideoUrl = "https://ch-17094775.kinxzone.com/name/ch_17094775/187b79504e8c9853", TotalLearningTime = 51, CurrentLearningTime = 24, IsEnrolled = false },

        // 추가 강의...
    };

    private void Showlecture(Lecture lecture) {
        selectedid = lecture.Id;
        Console.WriteLine($"{lecture.Id}번 강의를 클릭하였습니다.");
        var lecturesJson = JsonSerializer.Serialize(lectures);
        NavigationManager.NavigateTo($"/classroom/{RoomId}/lecture/{lecture.Id}?lectures={Uri.EscapeDataString(lecturesJson)}");
    }
}
