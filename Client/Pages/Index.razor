@page "/"
@inject AuthenticationService AuthService
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@using ClassHub.Client.Models;
@using ClassHub.Shared;
@using Microsoft.AspNetCore.WebUtilities;
@using Microsoft.JSInterop;
@using System.Text;
@using System.Text.Json;

<Timetable Courses="Courses" />

@code {
    private List<Course> Courses = new List<Course> {
        new Course { Number = 1, Year = 2023, Semester = 1, Name = "Math", Instructor = "Prof. A", Day = DayOfWeek.Monday, StartTime = 9, EndTime = 10, ClassRoom = "Y1234" },
        new Course { Number = 2, Year = 2023, Semester = 1, Name = "Physics", Instructor = "Prof. B", Day = DayOfWeek.Wednesday, StartTime = 11, EndTime = 13, ClassRoom = "Y1234" },
        // 다른 강의 데이터를 추가하세요.
    };

    protected override void OnInitialized() {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("code", out var code))
        {
            Console.WriteLine($"인증 코드: {code}");
            AuthService.IsLoggedIn = true;

            exchangeToken(code);
        }

        if (AuthService.IsLoggedIn == false) NavigationManager.NavigateTo("/login");
    }

    protected async Task exchangeToken(String code)
    {
        var client = new HttpClient();
        var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost:7182/TokenExchange/submit-code");

        request.Content = new StringContent(JsonSerializer.Serialize(new AccessTokenRequest { AuthorizationCode = code }), Encoding.UTF8, "application/json");
        try
        {
            var response = await client.SendAsync(request);
            var content = await response.Content.ReadAsStringAsync();
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "accessToken", JsonSerializer.Deserialize<AccessTokenResponse>(content).AccessToken);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error during request: " + ex.Message);
        }
    }
}
