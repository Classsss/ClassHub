@inject NavigationManager NavigationManager
@using ClassHub.Client.Models

<style>
    .announcement-row:hover {
        background-color: rgba(0, 0, 0, 0.1);
    }
</style>

<h3>공지사항</h3>
<br />
<table class="table">
    <thead>
        <tr>
            <th style="width: 10%;">번호</th>
            <th style="width: 50%;">제목</th>
            <th style="width: 15%;">작성자</th>
            <th style="width: 25%;">게시일</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var announcement in pagedAnnouncements)
        {
            <tr class="announcement-row" @onclick="@(() => ShowAnnouncement(announcement))" style="cursor:pointer;">
                <td style="text-indent : 7px;">@announcement.Id</td>
                <td>@announcement.Title</td>
                <td>@announcement.Author</td>
                <td>@announcement.StartDate.ToString("yyyy.MM.dd")</td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item"><button class="page-link" @onclick="GoToFirstPage">처음</button></li>
            <li class="page-item"><button class="page-link" @onclick="GoToPreviousPage">이전</button></li>
            @for (int i = 1; i <= totalPages; i++)
            {
                int currentPageNumber = i;
                <li class="page-item @(currentPage == i ? "active" : "")">
                    <button class="page-link" @onclick="() => GoToPage(currentPageNumber)">@i</button>
                </li>
            }

            <li class="page-item"><button class="page-link" @onclick="GoToNextPage">다음</button></li>
            <li class="page-item"><button class="page-link" @onclick="GoToLastPage">끝</button></li>
        </ul>
    </nav>
</div>



@code {
    [Parameter]
    public List<Announcement> Announcements { get; set; }

    public int RoomId { get; set; }

    private void ShowAnnouncement(Announcement announcement)
    {
        Console.WriteLine($"{announcement.Id}번 공지를 클릭하였습니다.");
        NavigationManager.NavigateTo(NavigationManager.Uri + $"/{announcement.Id}");
    }

    private int currentPage = 1;
    private int pageSize = 10; // 원하는 페이지당 표시할 항목 수를 설정합니다.
    private int totalPages = 0;

    private List<Announcement> pagedAnnouncements = new List<Announcement>();

    protected override void OnParametersSet() // OninitializedAsync()를 대체함
    {
        Announcements = Announcements.OrderByDescending(a => a.Id).ToList();
        CalculateTotalPages();
        LoadPagedData();
    }

    private void CalculateTotalPages()
    {
        totalPages = (int)Math.Ceiling((double)Announcements.Count / pageSize);
    }


    private void LoadPagedData()
    {
        pagedAnnouncements = Announcements.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
    }

    private void GoToPage(int pageNumber)
    {
        currentPage = pageNumber;
        LoadPagedData();
    }


    private void GoToPreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            LoadPagedData();
        }
    }

    private void GoToNextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
            LoadPagedData();
        }
    }

    private void GoToFirstPage()
    {
        currentPage = 1;
        LoadPagedData();
    }

    private void GoToLastPage()
    {
        currentPage = totalPages;
        LoadPagedData();
    }
}